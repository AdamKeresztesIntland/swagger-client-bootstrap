/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.File;
import java.io.IOException;

/**
 * DeploymentModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-29T09:51:27.838+02:00[Europe/Budapest]")
public class DeploymentModel {
  public static final String SERIALIZED_NAME_IMPORTS = "imports";
  @SerializedName(SERIALIZED_NAME_IMPORTS)
  private File imports;


  public DeploymentModel imports(File imports) {
    
    this.imports = imports;
    return this;
  }

   /**
   * Deployment files
   * @return imports
  **/
  @ApiModelProperty(required = true, value = "Deployment files")

  public File getImports() {
    return imports;
  }


  public void setImports(File imports) {
    this.imports = imports;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeploymentModel deploymentModel = (DeploymentModel) o;
    return Objects.equals(this.imports, deploymentModel.imports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imports);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentModel {\n");
    sb.append("    imports: ").append(toIndentedString(imports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

